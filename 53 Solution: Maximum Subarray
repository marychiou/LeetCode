/* Kadane's Algorithm: Dynamic Programming */

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int max_sum = 0;
        int this_sum = 0;
        for (int i =0 ; i < nums.size() ; i++){
            this_sum += nums.at(i);
            if (this_sum > max_sum)
                max_sum = this_sum;
            else if (this_sum < 0)
                this_sum = 0;
        }
        if (max_sum > 0)
            return max_sum;
        else
            return *max_element(nums.begin(), nums.end());
        
    }
};
